{"version":3,"names":["AnimatedDiffClamp","a","min","max","_a","_min","_max","_value","_lastValue","__getValue","platformConfig","__makeNative","config","AnimatedInterpolation","value","diff","Math","__addChild","__removeChild","type","input","__getNativeTag","AnimatedWithChildren"],"sources":["AnimatedDiffClamp.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\nimport type {InterpolationConfigType} from './AnimatedInterpolation';\nimport type AnimatedNode from './AnimatedNode';\n\nimport AnimatedInterpolation from './AnimatedInterpolation';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedDiffClamp extends AnimatedWithChildren {\n  _a: AnimatedNode;\n  _min: number;\n  _max: number;\n  _value: number;\n  _lastValue: number;\n\n  constructor(a: AnimatedNode, min: number, max: number) {\n    super();\n\n    this._a = a;\n    this._min = min;\n    this._max = max;\n    this._value = this._lastValue = this._a.__getValue();\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this._a.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n\n  interpolate<OutputT: number | string>(\n    config: InterpolationConfigType<OutputT>,\n  ): AnimatedInterpolation<OutputT> {\n    return new AnimatedInterpolation(this, config);\n  }\n\n  __getValue(): number {\n    const value = this._a.__getValue();\n    const diff = value - this._lastValue;\n    this._lastValue = value;\n    this._value = Math.min(Math.max(this._value + diff, this._min), this._max);\n    return this._value;\n  }\n\n  __attach(): void {\n    this._a.__addChild(this);\n  }\n\n  __detach(): void {\n    this._a.__removeChild(this);\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    return {\n      type: 'diffclamp',\n      input: this._a.__getNativeTag(),\n      min: this._min,\n      max: this._max,\n    };\n  }\n}\n"],"mappings":"AAUA;;;;;;;;;;;;;;;;;;;;;AAMA;;AACA;;;;;;IAEqBA,iB;;;;;EAOnB,2BAAYC,CAAZ,EAA6BC,GAA7B,EAA0CC,GAA1C,EAAuD;IAAA;;IAAA;IACrD;IAEA,MAAKC,EAAL,GAAUH,CAAV;IACA,MAAKI,IAAL,GAAYH,GAAZ;IACA,MAAKI,IAAL,GAAYH,GAAZ;IACA,MAAKI,MAAL,GAAc,MAAKC,UAAL,GAAkB,MAAKJ,EAAL,CAAQK,UAAR,EAAhC;IANqD;EAOtD;;;;WAED,sBAAaC,cAAb,EAA8C;MAC5C,KAAKN,EAAL,CAAQO,YAAR,CAAqBD,cAArB;;MACA,gHAAmBA,cAAnB;IACD;;;WAED,qBACEE,MADF,EAEkC;MAChC,OAAO,IAAIC,8BAAJ,CAA0B,IAA1B,EAAgCD,MAAhC,CAAP;IACD;;;WAED,sBAAqB;MACnB,IAAME,KAAK,GAAG,KAAKV,EAAL,CAAQK,UAAR,EAAd;;MACA,IAAMM,IAAI,GAAGD,KAAK,GAAG,KAAKN,UAA1B;MACA,KAAKA,UAAL,GAAkBM,KAAlB;MACA,KAAKP,MAAL,GAAcS,IAAI,CAACd,GAAL,CAASc,IAAI,CAACb,GAAL,CAAS,KAAKI,MAAL,GAAcQ,IAAvB,EAA6B,KAAKV,IAAlC,CAAT,EAAkD,KAAKC,IAAvD,CAAd;MACA,OAAO,KAAKC,MAAZ;IACD;;;WAED,oBAAiB;MACf,KAAKH,EAAL,CAAQa,UAAR,CAAmB,IAAnB;IACD;;;WAED,oBAAiB;MACf,KAAKb,EAAL,CAAQc,aAAR,CAAsB,IAAtB;;MACA;IACD;;;WAED,6BAAyB;MACvB,OAAO;QACLC,IAAI,EAAE,WADD;QAELC,KAAK,EAAE,KAAKhB,EAAL,CAAQiB,cAAR,EAFF;QAGLnB,GAAG,EAAE,KAAKG,IAHL;QAILF,GAAG,EAAE,KAAKG;MAJL,CAAP;IAMD;;;EAnD4CgB,8B"}