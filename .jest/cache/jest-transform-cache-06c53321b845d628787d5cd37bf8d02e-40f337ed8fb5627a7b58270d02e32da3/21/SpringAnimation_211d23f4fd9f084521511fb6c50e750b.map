{"version":3,"names":["SpringAnimation","config","_overshootClamping","overshootClamping","_restDisplacementThreshold","restDisplacementThreshold","_restSpeedThreshold","restSpeedThreshold","_initialVelocity","velocity","_lastVelocity","_toValue","toValue","_delay","delay","_useNativeDriver","NativeAnimatedHelper","shouldUseNativeDriver","_platformConfig","platformConfig","__isInteraction","isInteraction","__iterations","iterations","stiffness","undefined","damping","mass","invariant","bounciness","speed","tension","friction","_stiffness","_damping","_mass","springConfig","SpringConfig","fromBouncinessAndSpeed","fromOrigamiTensionAndFriction","type","initialVelocity","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","__active","_startPosition","_lastPosition","_onUpdate","__onEnd","_lastTime","Date","now","_frameTime","internalState","getInternalState","lastPosition","lastVelocity","lastTime","start","__startNativeAnimation","_timeout","setTimeout","MAX_STEPS","deltaTime","c","m","k","v0","zeta","Math","sqrt","omega0","omega1","x0","position","t","envelope","exp","sin","cos","isOvershooting","isVelocity","abs","isDisplacement","__debouncedOnEnd","finished","_animationFrame","requestAnimationFrame","bind","clearTimeout","global","cancelAnimationFrame","Animation"],"sources":["SpringAnimation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\nimport type AnimatedInterpolation from '../nodes/AnimatedInterpolation';\nimport type AnimatedValue from '../nodes/AnimatedValue';\nimport type AnimatedValueXY from '../nodes/AnimatedValueXY';\nimport type {AnimationConfig, EndCallback} from './Animation';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedColor from '../nodes/AnimatedColor';\nimport * as SpringConfig from '../SpringConfig';\nimport Animation from './Animation';\nimport invariant from 'invariant';\n\nexport type SpringAnimationConfig = {\n  ...AnimationConfig,\n  toValue:\n    | number\n    | AnimatedValue\n    | {\n        x: number,\n        y: number,\n        ...\n      }\n    | AnimatedValueXY\n    | {\n        r: number,\n        g: number,\n        b: number,\n        a: number,\n        ...\n      }\n    | AnimatedColor\n    | AnimatedInterpolation<number>,\n  overshootClamping?: boolean,\n  restDisplacementThreshold?: number,\n  restSpeedThreshold?: number,\n  velocity?:\n    | number\n    | {\n        x: number,\n        y: number,\n        ...\n      },\n  bounciness?: number,\n  speed?: number,\n  tension?: number,\n  friction?: number,\n  stiffness?: number,\n  damping?: number,\n  mass?: number,\n  delay?: number,\n};\n\nexport type SpringAnimationConfigSingle = {\n  ...AnimationConfig,\n  toValue: number,\n  overshootClamping?: boolean,\n  restDisplacementThreshold?: number,\n  restSpeedThreshold?: number,\n  velocity?: number,\n  bounciness?: number,\n  speed?: number,\n  tension?: number,\n  friction?: number,\n  stiffness?: number,\n  damping?: number,\n  mass?: number,\n  delay?: number,\n};\n\nexport default class SpringAnimation extends Animation {\n  _overshootClamping: boolean;\n  _restDisplacementThreshold: number;\n  _restSpeedThreshold: number;\n  _lastVelocity: number;\n  _startPosition: number;\n  _lastPosition: number;\n  _fromValue: number;\n  _toValue: number;\n  _stiffness: number;\n  _damping: number;\n  _mass: number;\n  _initialVelocity: number;\n  _delay: number;\n  _timeout: any;\n  _startTime: number;\n  _lastTime: number;\n  _frameTime: number;\n  _onUpdate: (value: number) => void;\n  _animationFrame: any;\n  _useNativeDriver: boolean;\n  _platformConfig: ?PlatformConfig;\n\n  constructor(config: SpringAnimationConfigSingle) {\n    super();\n\n    this._overshootClamping = config.overshootClamping ?? false;\n    this._restDisplacementThreshold = config.restDisplacementThreshold ?? 0.001;\n    this._restSpeedThreshold = config.restSpeedThreshold ?? 0.001;\n    this._initialVelocity = config.velocity ?? 0;\n    this._lastVelocity = config.velocity ?? 0;\n    this._toValue = config.toValue;\n    this._delay = config.delay ?? 0;\n    this._useNativeDriver = NativeAnimatedHelper.shouldUseNativeDriver(config);\n    this._platformConfig = config.platformConfig;\n    this.__isInteraction = config.isInteraction ?? !this._useNativeDriver;\n    this.__iterations = config.iterations ?? 1;\n\n    if (\n      config.stiffness !== undefined ||\n      config.damping !== undefined ||\n      config.mass !== undefined\n    ) {\n      invariant(\n        config.bounciness === undefined &&\n          config.speed === undefined &&\n          config.tension === undefined &&\n          config.friction === undefined,\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one',\n      );\n      this._stiffness = config.stiffness ?? 100;\n      this._damping = config.damping ?? 10;\n      this._mass = config.mass ?? 1;\n    } else if (config.bounciness !== undefined || config.speed !== undefined) {\n      // Convert the origami bounciness/speed values to stiffness/damping\n      // We assume mass is 1.\n      invariant(\n        config.tension === undefined &&\n          config.friction === undefined &&\n          config.stiffness === undefined &&\n          config.damping === undefined &&\n          config.mass === undefined,\n        'You can define one of bounciness/speed, tension/friction, or stiffness/damping/mass, but not more than one',\n      );\n      const springConfig = SpringConfig.fromBouncinessAndSpeed(\n        config.bounciness ?? 8,\n        config.speed ?? 12,\n      );\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    } else {\n      // Convert the origami tension/friction values to stiffness/damping\n      // We assume mass is 1.\n      const springConfig = SpringConfig.fromOrigamiTensionAndFriction(\n        config.tension ?? 40,\n        config.friction ?? 7,\n      );\n      this._stiffness = springConfig.stiffness;\n      this._damping = springConfig.damping;\n      this._mass = 1;\n    }\n\n    invariant(this._stiffness > 0, 'Stiffness value must be greater than 0');\n    invariant(this._damping > 0, 'Damping value must be greater than 0');\n    invariant(this._mass > 0, 'Mass value must be greater than 0');\n  }\n\n  __getNativeAnimationConfig(): {|\n    damping: number,\n    initialVelocity: number,\n    iterations: number,\n    mass: number,\n    platformConfig: ?PlatformConfig,\n    overshootClamping: boolean,\n    restDisplacementThreshold: number,\n    restSpeedThreshold: number,\n    stiffness: number,\n    toValue: any,\n    type: $TEMPORARY$string<'spring'>,\n  |} {\n    return {\n      type: 'spring',\n      overshootClamping: this._overshootClamping,\n      restDisplacementThreshold: this._restDisplacementThreshold,\n      restSpeedThreshold: this._restSpeedThreshold,\n      stiffness: this._stiffness,\n      damping: this._damping,\n      mass: this._mass,\n      initialVelocity: this._initialVelocity ?? this._lastVelocity,\n      toValue: this._toValue,\n      iterations: this.__iterations,\n      platformConfig: this._platformConfig,\n    };\n  }\n\n  start(\n    fromValue: number,\n    onUpdate: (value: number) => void,\n    onEnd: ?EndCallback,\n    previousAnimation: ?Animation,\n    animatedValue: AnimatedValue,\n  ): void {\n    this.__active = true;\n    this._startPosition = fromValue;\n    this._lastPosition = this._startPosition;\n\n    this._onUpdate = onUpdate;\n    this.__onEnd = onEnd;\n    this._lastTime = Date.now();\n    this._frameTime = 0.0;\n\n    if (previousAnimation instanceof SpringAnimation) {\n      const internalState = previousAnimation.getInternalState();\n      this._lastPosition = internalState.lastPosition;\n      this._lastVelocity = internalState.lastVelocity;\n      // Set the initial velocity to the last velocity\n      this._initialVelocity = this._lastVelocity;\n      this._lastTime = internalState.lastTime;\n    }\n\n    const start = () => {\n      if (this._useNativeDriver) {\n        this.__startNativeAnimation(animatedValue);\n      } else {\n        this.onUpdate();\n      }\n    };\n\n    //  If this._delay is more than 0, we start after the timeout.\n    if (this._delay) {\n      this._timeout = setTimeout(start, this._delay);\n    } else {\n      start();\n    }\n  }\n\n  getInternalState(): Object {\n    return {\n      lastPosition: this._lastPosition,\n      lastVelocity: this._lastVelocity,\n      lastTime: this._lastTime,\n    };\n  }\n\n  /**\n   * This spring model is based off of a damped harmonic oscillator\n   * (https://en.wikipedia.org/wiki/Harmonic_oscillator#Damped_harmonic_oscillator).\n   *\n   * We use the closed form of the second order differential equation:\n   *\n   * x'' + (2ζ⍵_0)x' + ⍵^2x = 0\n   *\n   * where\n   *    ⍵_0 = √(k / m) (undamped angular frequency of the oscillator),\n   *    ζ = c / 2√mk (damping ratio),\n   *    c = damping constant\n   *    k = stiffness\n   *    m = mass\n   *\n   * The derivation of the closed form is described in detail here:\n   * http://planetmath.org/sites/default/files/texpdf/39745.pdf\n   *\n   * This algorithm happens to match the algorithm used by CASpringAnimation,\n   * a QuartzCore (iOS) API that creates spring animations.\n   */\n  onUpdate(): void {\n    // If for some reason we lost a lot of frames (e.g. process large payload or\n    // stopped in the debugger), we only advance by 4 frames worth of\n    // computation and will continue on the next frame. It's better to have it\n    // running at faster speed than jumping to the end.\n    const MAX_STEPS = 64;\n    let now = Date.now();\n    if (now > this._lastTime + MAX_STEPS) {\n      now = this._lastTime + MAX_STEPS;\n    }\n\n    const deltaTime = (now - this._lastTime) / 1000;\n    this._frameTime += deltaTime;\n\n    const c: number = this._damping;\n    const m: number = this._mass;\n    const k: number = this._stiffness;\n    const v0: number = -this._initialVelocity;\n\n    const zeta = c / (2 * Math.sqrt(k * m)); // damping ratio\n    const omega0 = Math.sqrt(k / m); // undamped angular frequency of the oscillator (rad/ms)\n    const omega1 = omega0 * Math.sqrt(1.0 - zeta * zeta); // exponential decay\n    const x0 = this._toValue - this._startPosition; // calculate the oscillation from x0 = 1 to x = 0\n\n    let position = 0.0;\n    let velocity = 0.0;\n    const t = this._frameTime;\n    if (zeta < 1) {\n      // Under damped\n      const envelope = Math.exp(-zeta * omega0 * t);\n      position =\n        this._toValue -\n        envelope *\n          (((v0 + zeta * omega0 * x0) / omega1) * Math.sin(omega1 * t) +\n            x0 * Math.cos(omega1 * t));\n      // This looks crazy -- it's actually just the derivative of the\n      // oscillation function\n      velocity =\n        zeta *\n          omega0 *\n          envelope *\n          ((Math.sin(omega1 * t) * (v0 + zeta * omega0 * x0)) / omega1 +\n            x0 * Math.cos(omega1 * t)) -\n        envelope *\n          (Math.cos(omega1 * t) * (v0 + zeta * omega0 * x0) -\n            omega1 * x0 * Math.sin(omega1 * t));\n    } else {\n      // Critically damped\n      const envelope = Math.exp(-omega0 * t);\n      position = this._toValue - envelope * (x0 + (v0 + omega0 * x0) * t);\n      velocity =\n        envelope * (v0 * (t * omega0 - 1) + t * x0 * (omega0 * omega0));\n    }\n\n    this._lastTime = now;\n    this._lastPosition = position;\n    this._lastVelocity = velocity;\n\n    this._onUpdate(position);\n    if (!this.__active) {\n      // a listener might have stopped us in _onUpdate\n      return;\n    }\n\n    // Conditions for stopping the spring animation\n    let isOvershooting = false;\n    if (this._overshootClamping && this._stiffness !== 0) {\n      if (this._startPosition < this._toValue) {\n        isOvershooting = position > this._toValue;\n      } else {\n        isOvershooting = position < this._toValue;\n      }\n    }\n    const isVelocity = Math.abs(velocity) <= this._restSpeedThreshold;\n    let isDisplacement = true;\n    if (this._stiffness !== 0) {\n      isDisplacement =\n        Math.abs(this._toValue - position) <= this._restDisplacementThreshold;\n    }\n\n    if (isOvershooting || (isVelocity && isDisplacement)) {\n      if (this._stiffness !== 0) {\n        // Ensure that we end up with a round value\n        this._lastPosition = this._toValue;\n        this._lastVelocity = 0;\n        this._onUpdate(this._toValue);\n      }\n\n      this.__debouncedOnEnd({finished: true});\n      return;\n    }\n    // $FlowFixMe[method-unbinding] added when improving typing for this parameters\n    this._animationFrame = requestAnimationFrame(this.onUpdate.bind(this));\n  }\n\n  stop(): void {\n    super.stop();\n    this.__active = false;\n    clearTimeout(this._timeout);\n    global.cancelAnimationFrame(this._animationFrame);\n    this.__debouncedOnEnd({finished: false});\n  }\n}\n"],"mappings":"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"}