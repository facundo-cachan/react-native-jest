{"version":3,"names":["_uniqueId","AnimatedValueXY","valueIn","config","value","x","y","AnimatedValue","invariant","_listeners","useNativeDriver","__makeNative","setValue","offset","setOffset","flattenOffset","extractOffset","__getValue","callback","resetAnimation","stopAnimation","id","String","jointCallback","number","addListener","removeListener","removeAllListeners","left","top","translateX","translateY","__addChild","__removeChild","platformConfig","AnimatedWithChildren"],"sources":["AnimatedValueXY.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport AnimatedValue from './AnimatedValue';\nimport AnimatedWithChildren from './AnimatedWithChildren';\nimport invariant from 'invariant';\n\nexport type AnimatedValueXYConfig = $ReadOnly<{\n  useNativeDriver: boolean,\n}>;\ntype ValueXYListenerCallback = (value: {\n  x: number,\n  y: number,\n  ...\n}) => mixed;\n\nlet _uniqueId = 1;\n\n/**\n * 2D Value for driving 2D animations, such as pan gestures. Almost identical\n * API to normal `Animated.Value`, but multiplexed.\n *\n * See https://reactnative.dev/docs/animatedvaluexy\n */\nexport default class AnimatedValueXY extends AnimatedWithChildren {\n  x: AnimatedValue;\n  y: AnimatedValue;\n  _listeners: {\n    [key: string]: {\n      x: string,\n      y: string,\n      ...\n    },\n    ...\n  };\n\n  constructor(\n    valueIn?: ?{\n      +x: number | AnimatedValue,\n      +y: number | AnimatedValue,\n      ...\n    },\n    config?: ?AnimatedValueXYConfig,\n  ) {\n    super();\n    const value: any = valueIn || {x: 0, y: 0}; // @flowfixme: shouldn't need `: any`\n    if (typeof value.x === 'number' && typeof value.y === 'number') {\n      this.x = new AnimatedValue(value.x);\n      this.y = new AnimatedValue(value.y);\n    } else {\n      invariant(\n        value.x instanceof AnimatedValue && value.y instanceof AnimatedValue,\n        'AnimatedValueXY must be initialized with an object of numbers or ' +\n          'AnimatedValues.',\n      );\n      this.x = value.x;\n      this.y = value.y;\n    }\n    this._listeners = {};\n    if (config && config.useNativeDriver) {\n      this.__makeNative();\n    }\n  }\n\n  /**\n   * Directly set the value. This will stop any animations running on the value\n   * and update all the bound properties.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#setvalue\n   */\n  setValue(value: {x: number, y: number, ...}) {\n    this.x.setValue(value.x);\n    this.y.setValue(value.y);\n  }\n\n  /**\n   * Sets an offset that is applied on top of whatever value is set, whether\n   * via `setValue`, an animation, or `Animated.event`. Useful for compensating\n   * things like the start of a pan gesture.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#setoffset\n   */\n  setOffset(offset: {x: number, y: number, ...}) {\n    this.x.setOffset(offset.x);\n    this.y.setOffset(offset.y);\n  }\n\n  /**\n   * Merges the offset value into the base value and resets the offset to zero.\n   * The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#flattenoffset\n   */\n  flattenOffset(): void {\n    this.x.flattenOffset();\n    this.y.flattenOffset();\n  }\n\n  /**\n   * Sets the offset value to the base value, and resets the base value to\n   * zero. The final output of the value is unchanged.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#extractoffset\n   */\n  extractOffset(): void {\n    this.x.extractOffset();\n    this.y.extractOffset();\n  }\n\n  __getValue(): {\n    x: number,\n    y: number,\n    ...\n  } {\n    return {\n      x: this.x.__getValue(),\n      y: this.y.__getValue(),\n    };\n  }\n\n  /**\n   * Stops any animation and resets the value to its original.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#resetanimation\n   */\n  resetAnimation(\n    callback?: (value: {\n      x: number,\n      y: number,\n      ...\n    }) => void,\n  ): void {\n    this.x.resetAnimation();\n    this.y.resetAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Stops any running animation or tracking. `callback` is invoked with the\n   * final value after stopping the animation, which is useful for updating\n   * state to match the animation position with layout.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#stopanimation\n   */\n  stopAnimation(\n    callback?: (value: {\n      x: number,\n      y: number,\n      ...\n    }) => void,\n  ): void {\n    this.x.stopAnimation();\n    this.y.stopAnimation();\n    callback && callback(this.__getValue());\n  }\n\n  /**\n   * Adds an asynchronous listener to the value so you can observe updates from\n   * animations.  This is useful because there is no way to synchronously read\n   * the value because it might be driven natively.\n   *\n   * Returns a string that serves as an identifier for the listener.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#addlistener\n   */\n  addListener(callback: ValueXYListenerCallback): string {\n    const id = String(_uniqueId++);\n    const jointCallback = ({value: number}: any) => {\n      callback(this.__getValue());\n    };\n    this._listeners[id] = {\n      x: this.x.addListener(jointCallback),\n      y: this.y.addListener(jointCallback),\n    };\n    return id;\n  }\n\n  /**\n   * Unregister a listener. The `id` param shall match the identifier\n   * previously returned by `addListener()`.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#removelistener\n   */\n  removeListener(id: string): void {\n    this.x.removeListener(this._listeners[id].x);\n    this.y.removeListener(this._listeners[id].y);\n    delete this._listeners[id];\n  }\n\n  /**\n   * Remove all registered listeners.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#removealllisteners\n   */\n  removeAllListeners(): void {\n    this.x.removeAllListeners();\n    this.y.removeAllListeners();\n    this._listeners = {};\n  }\n\n  /**\n   * Converts `{x, y}` into `{left, top}` for use in style.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#getlayout\n   */\n  getLayout(): {[key: string]: AnimatedValue, ...} {\n    return {\n      left: this.x,\n      top: this.y,\n    };\n  }\n\n  /**\n   * Converts `{x, y}` into a useable translation transform.\n   *\n   * See https://reactnative.dev/docs/animatedvaluexy#gettranslatetransform\n   */\n  getTranslateTransform(): Array<{[key: string]: AnimatedValue, ...}> {\n    return [{translateX: this.x}, {translateY: this.y}];\n  }\n\n  __attach(): void {\n    this.x.__addChild(this);\n    this.y.__addChild(this);\n    super.__attach();\n  }\n\n  __detach(): void {\n    this.x.__removeChild(this);\n    this.y.__removeChild(this);\n    super.__detach();\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this.x.__makeNative(platformConfig);\n    this.y.__makeNative(platformConfig);\n    super.__makeNative(platformConfig);\n  }\n}\n"],"mappings":"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"}