{"version":3,"names":["inAnimationCallback","mockAnimationStart","start","callback","guardedCallback","console","warn","emptyAnimation","stop","reset","_startNativeLoop","_isUsingNativeDriver","mockCompositeAnimation","animations","forEach","animation","finished","spring","value","config","anyValue","setValue","toValue","timing","decay","sequence","parallel","delay","time","stagger","loop","iterations","Value","AnimatedValue","ValueXY","AnimatedValueXY","Color","AnimatedColor","Interpolation","AnimatedInterpolation","Node","AnimatedNode","add","AnimatedImplementation","subtract","divide","multiply","modulo","diffClamp","event","createAnimatedComponent","attachNativeEvent","forkEvent","unforkEvent","Event","AnimatedEvent"],"sources":["AnimatedMock.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {Numeric as AnimatedNumeric} from './AnimatedImplementation';\nimport type {EndResult} from './animations/Animation';\nimport type {EndCallback} from './animations/Animation';\nimport type {DecayAnimationConfig} from './animations/DecayAnimation';\nimport type {SpringAnimationConfig} from './animations/SpringAnimation';\nimport type {TimingAnimationConfig} from './animations/TimingAnimation';\n\nimport {AnimatedEvent, attachNativeEvent} from './AnimatedEvent';\nimport AnimatedImplementation from './AnimatedImplementation';\nimport createAnimatedComponent from './createAnimatedComponent';\nimport AnimatedColor from './nodes/AnimatedColor';\nimport AnimatedInterpolation from './nodes/AnimatedInterpolation';\nimport AnimatedNode from './nodes/AnimatedNode';\nimport AnimatedValue from './nodes/AnimatedValue';\nimport AnimatedValueXY from './nodes/AnimatedValueXY';\n\n/**\n * Animations are a source of flakiness in snapshot testing. This mock replaces\n * animation functions from AnimatedImplementation with empty animations for\n * predictability in tests. When possible the animation will run immediately\n * to the final state.\n */\n\n// Prevent any callback invocation from recursively triggering another\n// callback, which may trigger another animation\nlet inAnimationCallback = false;\nfunction mockAnimationStart(\n  start: (callback?: ?EndCallback) => void,\n): (callback?: ?EndCallback) => void {\n  return callback => {\n    const guardedCallback =\n      callback == null\n        ? callback\n        : (...args: Array<EndResult>) => {\n            if (inAnimationCallback) {\n              console.warn(\n                'Ignoring recursive animation callback when running mock animations',\n              );\n              return;\n            }\n            inAnimationCallback = true;\n            try {\n              callback(...args);\n            } finally {\n              inAnimationCallback = false;\n            }\n          };\n    start(guardedCallback);\n  };\n}\n\nexport type CompositeAnimation = {\n  start: (callback?: ?EndCallback) => void,\n  stop: () => void,\n  reset: () => void,\n  _startNativeLoop: (iterations?: number) => void,\n  _isUsingNativeDriver: () => boolean,\n  ...\n};\n\nconst emptyAnimation = {\n  start: () => {},\n  stop: () => {},\n  reset: () => {},\n  _startNativeLoop: () => {},\n  _isUsingNativeDriver: () => {\n    return false;\n  },\n};\n\nconst mockCompositeAnimation = (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation => ({\n  ...emptyAnimation,\n  start: mockAnimationStart((callback?: ?EndCallback): void => {\n    animations.forEach(animation => animation.start());\n    callback?.({finished: true});\n  }),\n});\n\nconst spring = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: SpringAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst timing = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: TimingAnimationConfig,\n): CompositeAnimation {\n  const anyValue: any = value;\n  return {\n    ...emptyAnimation,\n    start: mockAnimationStart((callback?: ?EndCallback): void => {\n      anyValue.setValue(config.toValue);\n      callback?.({finished: true});\n    }),\n  };\n};\n\nconst decay = function (\n  value: AnimatedValue | AnimatedValueXY | AnimatedColor,\n  config: DecayAnimationConfig,\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst sequence = function (\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype ParallelConfig = {stopTogether?: boolean, ...};\nconst parallel = function (\n  animations: Array<CompositeAnimation>,\n  config?: ?ParallelConfig,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\nconst delay = function (time: number): CompositeAnimation {\n  return emptyAnimation;\n};\n\nconst stagger = function (\n  time: number,\n  animations: Array<CompositeAnimation>,\n): CompositeAnimation {\n  return mockCompositeAnimation(animations);\n};\n\ntype LoopAnimationConfig = {\n  iterations: number,\n  resetBeforeIteration?: boolean,\n  ...\n};\n\nconst loop = function (\n  animation: CompositeAnimation,\n  // $FlowFixMe[prop-missing]\n  {iterations = -1}: LoopAnimationConfig = {},\n): CompositeAnimation {\n  return emptyAnimation;\n};\n\nexport type {AnimatedNumeric as Numeric};\n\nexport default {\n  Value: AnimatedValue,\n  ValueXY: AnimatedValueXY,\n  Color: AnimatedColor,\n  Interpolation: AnimatedInterpolation,\n  Node: AnimatedNode,\n  decay,\n  timing,\n  spring,\n  add: AnimatedImplementation.add,\n  subtract: AnimatedImplementation.subtract,\n  divide: AnimatedImplementation.divide,\n  multiply: AnimatedImplementation.multiply,\n  modulo: AnimatedImplementation.modulo,\n  diffClamp: AnimatedImplementation.diffClamp,\n  delay,\n  sequence,\n  parallel,\n  stagger,\n  loop,\n  event: AnimatedImplementation.event,\n  createAnimatedComponent,\n  attachNativeEvent,\n  forkEvent: AnimatedImplementation.forkEvent,\n  unforkEvent: AnimatedImplementation.unforkEvent,\n  Event: AnimatedEvent,\n};\n"],"mappings":"AAUA;;;;;;;;;AASA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAWA,IAAIA,mBAAmB,GAAG,KAA1B;;AACA,SAASC,kBAAT,CACEC,KADF,EAEqC;EACnC,OAAO,UAAAC,QAAQ,EAAI;IACjB,IAAMC,eAAe,GACnBD,QAAQ,IAAI,IAAZ,GACIA,QADJ,GAEI,YAA+B;MAC7B,IAAIH,mBAAJ,EAAyB;QACvBK,OAAO,CAACC,IAAR,CACE,oEADF;QAGA;MACD;;MACDN,mBAAmB,GAAG,IAAtB;;MACA,IAAI;QACFG,QAAQ,MAAR;MACD,CAFD,SAEU;QACRH,mBAAmB,GAAG,KAAtB;MACD;IACF,CAhBP;IAiBAE,KAAK,CAACE,eAAD,CAAL;EACD,CAnBD;AAoBD;;AAWD,IAAMG,cAAc,GAAG;EACrBL,KAAK,EAAE,iBAAM,CAAE,CADM;EAErBM,IAAI,EAAE,gBAAM,CAAE,CAFO;EAGrBC,KAAK,EAAE,iBAAM,CAAE,CAHM;EAIrBC,gBAAgB,EAAE,4BAAM,CAAE,CAJL;EAKrBC,oBAAoB,EAAE,gCAAM;IAC1B,OAAO,KAAP;EACD;AAPoB,CAAvB;;AAUA,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAC7BC,UAD6B;EAAA,yBAG1BN,cAH0B;IAI7BL,KAAK,EAAED,kBAAkB,CAAC,UAACE,QAAD,EAAmC;MAC3DU,UAAU,CAACC,OAAX,CAAmB,UAAAC,SAAS;QAAA,OAAIA,SAAS,CAACb,KAAV,EAAJ;MAAA,CAA5B;MACAC,QAAQ,QAAR,YAAAA,QAAQ,CAAG;QAACa,QAAQ,EAAE;MAAX,CAAH,CAAR;IACD,CAHwB;EAJI;AAAA,CAA/B;;AAUA,IAAMC,MAAM,GAAG,SAATA,MAAS,CACbC,KADa,EAEbC,MAFa,EAGO;EACpB,IAAMC,QAAa,GAAGF,KAAtB;EACA,yBACKX,cADL;IAEEL,KAAK,EAAED,kBAAkB,CAAC,UAACE,QAAD,EAAmC;MAC3DiB,QAAQ,CAACC,QAAT,CAAkBF,MAAM,CAACG,OAAzB;MACAnB,QAAQ,QAAR,YAAAA,QAAQ,CAAG;QAACa,QAAQ,EAAE;MAAX,CAAH,CAAR;IACD,CAHwB;EAF3B;AAOD,CAZD;;AAcA,IAAMO,MAAM,GAAG,SAATA,MAAS,CACbL,KADa,EAEbC,MAFa,EAGO;EACpB,IAAMC,QAAa,GAAGF,KAAtB;EACA,yBACKX,cADL;IAEEL,KAAK,EAAED,kBAAkB,CAAC,UAACE,QAAD,EAAmC;MAC3DiB,QAAQ,CAACC,QAAT,CAAkBF,MAAM,CAACG,OAAzB;MACAnB,QAAQ,QAAR,YAAAA,QAAQ,CAAG;QAACa,QAAQ,EAAE;MAAX,CAAH,CAAR;IACD,CAHwB;EAF3B;AAOD,CAZD;;AAcA,IAAMQ,KAAK,GAAG,SAARA,KAAQ,CACZN,KADY,EAEZC,MAFY,EAGQ;EACpB,OAAOZ,cAAP;AACD,CALD;;AAOA,IAAMkB,QAAQ,GAAG,SAAXA,QAAW,CACfZ,UADe,EAEK;EACpB,OAAOD,sBAAsB,CAACC,UAAD,CAA7B;AACD,CAJD;;AAOA,IAAMa,QAAQ,GAAG,SAAXA,QAAW,CACfb,UADe,EAEfM,MAFe,EAGK;EACpB,OAAOP,sBAAsB,CAACC,UAAD,CAA7B;AACD,CALD;;AAOA,IAAMc,KAAK,GAAG,SAARA,KAAQ,CAAUC,IAAV,EAA4C;EACxD,OAAOrB,cAAP;AACD,CAFD;;AAIA,IAAMsB,OAAO,GAAG,SAAVA,OAAU,CACdD,IADc,EAEdf,UAFc,EAGM;EACpB,OAAOD,sBAAsB,CAACC,UAAD,CAA7B;AACD,CALD;;AAaA,IAAMiB,IAAI,GAAG,SAAPA,IAAO,CACXf,SADW,EAIS;EAAA,+EADqB,EACrB;EAAA,2BADnBgB,UACmB;EAAA,IADnBA,UACmB,gCADN,CAAC,CACK;;EACpB,OAAOxB,cAAP;AACD,CAND;;eAUe;EACbyB,KAAK,EAAEC,sBADM;EAEbC,OAAO,EAAEC,wBAFI;EAGbC,KAAK,EAAEC,sBAHM;EAIbC,aAAa,EAAEC,8BAJF;EAKbC,IAAI,EAAEC,qBALO;EAMbjB,KAAK,EAALA,KANa;EAObD,MAAM,EAANA,MAPa;EAQbN,MAAM,EAANA,MARa;EASbyB,GAAG,EAAEC,+BAAA,CAAuBD,GATf;EAUbE,QAAQ,EAAED,+BAAA,CAAuBC,QAVpB;EAWbC,MAAM,EAAEF,+BAAA,CAAuBE,MAXlB;EAYbC,QAAQ,EAAEH,+BAAA,CAAuBG,QAZpB;EAabC,MAAM,EAAEJ,+BAAA,CAAuBI,MAblB;EAcbC,SAAS,EAAEL,+BAAA,CAAuBK,SAdrB;EAebrB,KAAK,EAALA,KAfa;EAgBbF,QAAQ,EAARA,QAhBa;EAiBbC,QAAQ,EAARA,QAjBa;EAkBbG,OAAO,EAAPA,OAlBa;EAmBbC,IAAI,EAAJA,IAnBa;EAoBbmB,KAAK,EAAEN,+BAAA,CAAuBM,KApBjB;EAqBbC,uBAAuB,EAAvBA,gCArBa;EAsBbC,iBAAiB,EAAjBA,gCAtBa;EAuBbC,SAAS,EAAET,+BAAA,CAAuBS,SAvBrB;EAwBbC,WAAW,EAAEV,+BAAA,CAAuBU,WAxBvB;EAyBbC,KAAK,EAAEC;AAzBM,C"}