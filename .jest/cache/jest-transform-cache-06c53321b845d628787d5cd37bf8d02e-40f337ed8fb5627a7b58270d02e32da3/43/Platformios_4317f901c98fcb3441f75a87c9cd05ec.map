{"version":3,"names":["Platform","__constants","OS","Version","constants","osVersion","NativePlatformConstantsIOS","getConstants","isPad","interfaceIdiom","isTV","isTesting","__DEV__","select","spec","ios","native","default","module","exports"],"sources":["Platform.ios.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport NativePlatformConstantsIOS from './NativePlatformConstantsIOS';\n\nexport type PlatformSelectSpec<T> = {\n  default?: T,\n  native?: T,\n  ios?: T,\n  ...\n};\n\nconst Platform = {\n  __constants: null,\n  OS: 'ios',\n  // $FlowFixMe[unsafe-getters-setters]\n  get Version(): string {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.osVersion;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get constants(): {|\n    forceTouchAvailable: boolean,\n    interfaceIdiom: string,\n    isTesting: boolean,\n    osVersion: string,\n    reactNativeVersion: {|\n      major: number,\n      minor: number,\n      patch: number,\n      prerelease: ?number,\n    |},\n    systemName: string,\n  |} {\n    // $FlowFixMe[object-this-reference]\n    if (this.__constants == null) {\n      // $FlowFixMe[object-this-reference]\n      this.__constants = NativePlatformConstantsIOS.getConstants();\n    }\n    // $FlowFixMe[object-this-reference]\n    return this.__constants;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isPad(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'pad';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTV(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'tv';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTesting(): boolean {\n    if (__DEV__) {\n      // $FlowFixMe[object-this-reference]\n      return this.constants.isTesting;\n    }\n    return false;\n  },\n  select: <T>(spec: PlatformSelectSpec<T>): T =>\n    // $FlowFixMe[incompatible-return]\n    'ios' in spec ? spec.ios : 'native' in spec ? spec.native : spec.default,\n};\n\nmodule.exports = Platform;\n"],"mappings":";;AAUA;;AASA,IAAMA,QAAQ,GAAG;EACfC,WAAW,EAAE,IADE;EAEfC,EAAE,EAAE,KAFW;;EAIf,IAAIC,OAAJ,GAAsB;IAEpB,OAAO,KAAKC,SAAL,CAAeC,SAAtB;EACD,CAPc;;EASf,IAAID,SAAJ,GAYG;IAED,IAAI,KAAKH,WAAL,IAAoB,IAAxB,EAA8B;MAE5B,KAAKA,WAAL,GAAmBK,mCAAA,CAA2BC,YAA3B,EAAnB;IACD;;IAED,OAAO,KAAKN,WAAZ;EACD,CA7Bc;;EA+Bf,IAAIO,KAAJ,GAAqB;IAEnB,OAAO,KAAKJ,SAAL,CAAeK,cAAf,KAAkC,KAAzC;EACD,CAlCc;;EAoCf,IAAIC,IAAJ,GAAoB;IAElB,OAAO,KAAKN,SAAL,CAAeK,cAAf,KAAkC,IAAzC;EACD,CAvCc;;EAyCf,IAAIE,SAAJ,GAAyB;IACvB,IAAIC,OAAJ,EAAa;MAEX,OAAO,KAAKR,SAAL,CAAeO,SAAtB;IACD;;IACD,OAAO,KAAP;EACD,CA/Cc;;EAgDfE,MAAM,EAAE,gBAAIC,IAAJ;IAAA,OAEN,SAASA,IAAT,GAAgBA,IAAI,CAACC,GAArB,GAA2B,YAAYD,IAAZ,GAAmBA,IAAI,CAACE,MAAxB,GAAiCF,IAAI,CAACG,OAF3D;EAAA;AAhDO,CAAjB;AAqDAC,MAAM,CAACC,OAAP,GAAiBnB,QAAjB"}