{"version":3,"names":["logError","error","info","console","log","Stack","createNativeStackNavigator","toJSON","component","renderer","create","render","App","DemoScreen","name","headerShown","unmountOnBlur","renderNavigator","props","Recoil","children","rest"],"sources":["customRender.tsx"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { render } from '@testing-library/react-native'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport renderer from 'react-test-renderer'\nimport { RecoilRoot } from 'recoil'\n\nimport DemoScreen from '@screens/demo'\nimport { RecoilObserver } from './RecoilObserver'\n\nimport type { RecoilObserverProps } from './RecoilObserver'\n\ntype Props = {\n  component: JSX.Element\n  name?: string\n}\ntype RecoilRenderProps = RecoilObserverProps & {\n  children: JSX.Element\n}\n\nconst logError = (error: Error, info: { componentStack: string }) => {\n  // Do something with the error, e.g. log to an external API\n  console.log(error, info)\n}\nconst Stack = createNativeStackNavigator()\n\nconst toJSON = (\n  component: Props['component'],\n) => {\n  renderer.create(component).toJSON()\n  return render(component)\n}\nconst App = ({ component = DemoScreen, name = 'Demo' }: Props) => (\n  <RecoilRoot>\n    <NavigationContainer>\n      <Stack.Navigator\n        detachInactiveScreens={true}\n        screenOptions={{\n          headerShown: true,\n          unmountOnBlur: true,\n        }}>\n        <Stack.Screen\n          component={component}\n          name={name}\n          options={{ headerShown: false }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  </RecoilRoot>\n)\nconst renderNavigator = (props: Props) =>\n  render(\n    // @ts-ignore\n    <ErrorBoundary FallbackComponent=\"Something went wrong\" onError={logError}>\n      <App {...props} />\n    </ErrorBoundary>,\n  )\nconst Recoil = ({ children, ...rest }: RecoilRenderProps) => render(\n  <RecoilRoot>\n    <RecoilObserver {...rest} />\n    {children}\n  </RecoilRoot>,\n)\n\nexport * from '@testing-library/react-native'\nexport { App, toJSON, renderNavigator as render, Recoil }\n\n"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AA8DA;EAAA;EAAA;EAAA;EAAA;IAAA;IAAA;MAAA;IAAA;EAAA;AAAA;;AA7DA;;AACA;;AACA;;AAEA;;AACA;;;;;;AAYA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAeC,IAAf,EAAoD;EAEnEC,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,IAAnB;AACD,CAHD;;AAIA,IAAMG,KAAK,GAAG,IAAAC,uCAAA,GAAd;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CACbC,SADa,EAEV;EACHC,0BAAA,CAASC,MAAT,CAAgBF,SAAhB,EAA2BD,MAA3B;;EACA,OAAO,IAAAI,mBAAA,EAAOH,SAAP,CAAP;AACD,CALD;;;;AAMA,IAAMI,GAAG,GAAG,SAANA,GAAM;EAAA,0BAAGJ,SAAH;EAAA,IAAGA,SAAH,+BAAeK,aAAf;EAAA,qBAA2BC,IAA3B;EAAA,IAA2BA,IAA3B,0BAAkC,MAAlC;EAAA,OACV,qBAAC,kBAAD;IAAA,UACE,qBAAC,2BAAD;MAAA,UACE,qBAAC,KAAD,CAAO,SAAP;QACE,qBAAqB,EAAE,IADzB;QAEE,aAAa,EAAE;UACbC,WAAW,EAAE,IADA;UAEbC,aAAa,EAAE;QAFF,CAFjB;QAAA,UAME,qBAAC,KAAD,CAAO,MAAP;UACE,SAAS,EAAER,SADb;UAEE,IAAI,EAAEM,IAFR;UAGE,OAAO,EAAE;YAAEC,WAAW,EAAE;UAAf;QAHX;MANF;IADF;EADF,EADU;AAAA,CAAZ;;;;AAkBA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;EAAA,OACtB,IAAAP,mBAAA,EAEE,qBAAC,iCAAD;IAAe,iBAAiB,EAAC,sBAAjC;IAAwD,OAAO,EAAEX,QAAjE;IAAA,UACE,qBAAC,GAAD,oBAASkB,KAAT;EADF,EAFF,CADsB;AAAA,CAAxB;;;;AAOA,IAAMC,MAAM,GAAG,SAATA,MAAS;EAAA,IAAGC,QAAH,SAAGA,QAAH;EAAA,IAAgBC,IAAhB;EAAA,OAA8C,IAAAV,mBAAA,EAC3D,sBAAC,kBAAD;IAAA,WACE,qBAAC,8BAAD,oBAAoBU,IAApB,EADF,EAEGD,QAFH;EAAA,EAD2D,CAA9C;AAAA,CAAf"}