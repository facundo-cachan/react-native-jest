{"version":3,"names":["AnimatedTransform","transforms","_transforms","platformConfig","forEach","transform","key","value","AnimatedNode","__makeNative","_get","animatedNode","__getValue","__getAnimatedValue","__addChild","__removeChild","transConfigs","push","type","property","nodeTag","__getNativeTag","NativeAnimatedHelper","transformDataType","validateTransform","getter","map","result","Array","isArray","element","Object","entries","nestedKey","nestedValue","AnimatedWithChildren"],"sources":["AnimatedTransform.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedNode from './AnimatedNode';\nimport AnimatedWithChildren from './AnimatedWithChildren';\n\nexport default class AnimatedTransform extends AnimatedWithChildren {\n  _transforms: $ReadOnlyArray<Object>;\n\n  constructor(transforms: $ReadOnlyArray<Object>) {\n    super();\n    this._transforms = transforms;\n  }\n\n  __makeNative(platformConfig: ?PlatformConfig) {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__makeNative(platformConfig);\n        }\n      }\n    });\n    super.__makeNative(platformConfig);\n  }\n\n  __getValue(): $ReadOnlyArray<Object> {\n    return this._get(animatedNode => animatedNode.__getValue());\n  }\n\n  __getAnimatedValue(): $ReadOnlyArray<Object> {\n    return this._get(animatedNode => animatedNode.__getAnimatedValue());\n  }\n\n  __attach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__addChild(this);\n        }\n      }\n    });\n  }\n\n  __detach(): void {\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          value.__removeChild(this);\n        }\n      }\n    });\n    super.__detach();\n  }\n\n  __getNativeConfig(): any {\n    const transConfigs = [];\n\n    this._transforms.forEach(transform => {\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          transConfigs.push({\n            type: 'animated',\n            property: key,\n            nodeTag: value.__getNativeTag(),\n          });\n        } else {\n          transConfigs.push({\n            type: 'static',\n            property: key,\n            value: NativeAnimatedHelper.transformDataType(value),\n          });\n        }\n      }\n    });\n\n    NativeAnimatedHelper.validateTransform(transConfigs);\n    return {\n      type: 'transform',\n      transforms: transConfigs,\n    };\n  }\n\n  _get(getter: AnimatedNode => any): $ReadOnlyArray<Object> {\n    return this._transforms.map(transform => {\n      const result: {[string]: any} = {};\n      for (const key in transform) {\n        const value = transform[key];\n        if (value instanceof AnimatedNode) {\n          result[key] = getter(value);\n        } else if (Array.isArray(value)) {\n          result[key] = value.map(element => {\n            if (element instanceof AnimatedNode) {\n              return getter(element);\n            } else {\n              return element;\n            }\n          });\n        } else if (typeof value === 'object') {\n          result[key] = {};\n          for (const [nestedKey, nestedValue] of Object.entries(value)) {\n            if (nestedValue instanceof AnimatedNode) {\n              result[key][nestedKey] = getter(nestedValue);\n            } else {\n              result[key][nestedKey] = nestedValue;\n            }\n          }\n        } else {\n          result[key] = value;\n        }\n      }\n      return result;\n    });\n  }\n}\n"],"mappings":"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"}