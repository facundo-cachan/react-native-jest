{"version":3,"names":["_react","_interopRequireDefault","require","_reactNative","_reactFreeze","_package","_TransitionProgressContext","_useTransitionProgress","_utils","obj","__esModule","default","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_defineProperty","value","_toPropertyKey","defineProperty","enumerable","configurable","writable","arg","_toPrimitive","String","input","hint","prim","Symbol","toPrimitive","undefined","res","TypeError","Number","isPlatformSupported","Platform","OS","ENABLE_SCREENS","enableScreens","shouldEnableScreens","UIManager","getViewManagerConfig","console","error","ENABLE_FREEZE","enableFreeze","shouldEnableReactFreeze","minor","parseInt","version","split","warn","shouldUseActivityState","screensEnabled","NativeScreenValue","NativeScreenContainerValue","NativeScreenNavigationContainerValue","NativeScreenStack","NativeScreenStackHeaderConfig","NativeScreenStackHeaderSubview","AnimatedNativeScreen","NativeSearchBar","NativeFullWindowOverlay","ScreensNativeModules","NativeScreen","requireNativeComponent","NativeScreenContainer","NativeScreenNavigationContainer","DelayedFreeze","_ref","freeze","children","_react$default$useSta","useState","_react$default$useSta2","_slicedToArray2","freezeState","setFreezeState","setImmediate","createElement","Freeze","ScreenStack","props","rest","_objectWithoutProperties2","_excluded","size","Children","count","childrenWithFreeze","map","child","index","_props$descriptor","_props$descriptors","_descriptor$options$f","_descriptor$options","descriptor","descriptors","freezeEnabled","options","freezeOnBlur","InnerScreen","_react$default$Compon","_inherits2","_super","_createSuper","_this","_classCallCheck2","_assertThisInitialized2","Animated","Value","ref","_this$props$onCompone","_this$props","onComponentRef","_createClass2","setNativeProps","_this$ref","render","_this2","_this$props2","_this$props2$enabled","enabled","_this$props2$freezeOn","_excluded2","_gestureResponseDista","_gestureResponseDista2","_gestureResponseDista3","_gestureResponseDista4","createAnimatedComponent","active","activityState","isNativeStack","gestureResponseDistance","_excluded3","handleRef","_ref$viewConfig","_ref$viewConfig$valid","viewConfig","validAttributes","style","display","setRef","start","end","top","bottom","onTransitionProgress","event","nativeEvent","progress","closing","goingForward","useNativeDriver","Provider","_excluded4","View","Component","ScreenContainer","_props$enabled","hasTwoStates","_excluded5","FullWindowOverlay","position","width","height","styles","StyleSheet","create","headerSubview","right","flexDirection","alignItems","justifyContent","ScreenStackHeaderBackButtonImage","type","Image","resizeMode","fadeDuration","ScreenStackHeaderRightView","ScreenStackHeaderLeftView","ScreenStackHeaderCenterView","ScreenStackHeaderSearchBarView","ScreenContext","createContext","Screen","_react$default$Compon2","_super2","ScreenWrapper","context","module","exports","ScreenStackHeaderConfig","ScreenStackHeaderSubview","SearchBar","isSearchBarAvailableForCurrentPlatform","useTransitionProgress","executeNativeBackPress"],"sources":["index.native.tsx"],"sourcesContent":["import React, { PropsWithChildren, ReactNode } from 'react';\nimport {\n  Animated,\n  Image,\n  ImageProps,\n  Platform,\n  requireNativeComponent,\n  StyleProp,\n  StyleSheet,\n  UIManager,\n  View,\n  ViewProps,\n  ViewStyle,\n} from 'react-native';\nimport { Freeze } from 'react-freeze';\nimport { version } from 'react-native/package.json';\n\nimport TransitionProgressContext from './TransitionProgressContext';\nimport useTransitionProgress from './useTransitionProgress';\nimport {\n  StackPresentationTypes,\n  StackAnimationTypes,\n  BlurEffectTypes,\n  ScreenReplaceTypes,\n  ScreenOrientationTypes,\n  HeaderSubviewTypes,\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n} from './types';\nimport {\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n} from './utils';\n\n// web implementation is taken from `index.tsx`\nconst isPlatformSupported =\n  Platform.OS === 'ios' ||\n  Platform.OS === 'android' ||\n  Platform.OS === 'windows';\n\nlet ENABLE_SCREENS = isPlatformSupported;\n\nfunction enableScreens(shouldEnableScreens = true): void {\n  ENABLE_SCREENS = isPlatformSupported && shouldEnableScreens;\n  if (ENABLE_SCREENS && !UIManager.getViewManagerConfig('RNSScreen')) {\n    console.error(\n      `Screen native module hasn't been linked. Please check the react-native-screens README for more details`\n    );\n  }\n}\n\nlet ENABLE_FREEZE = false;\n\nfunction enableFreeze(shouldEnableReactFreeze = true): void {\n  const minor = parseInt(version.split('.')[1]); // eg. takes 66 from '0.66.0'\n\n  // react-freeze requires react-native >=0.64, react-native from main is 0.0.0\n  if (!(minor === 0 || minor >= 64) && shouldEnableReactFreeze) {\n    console.warn(\n      'react-freeze library requires at least react-native 0.64. Please upgrade your react-native version in order to use this feature.'\n    );\n  }\n\n  ENABLE_FREEZE = shouldEnableReactFreeze;\n}\n\n// const that tells if the library should use new implementation, will be undefined for older versions\nconst shouldUseActivityState = true;\n\nfunction screensEnabled(): boolean {\n  return ENABLE_SCREENS;\n}\n\n// We initialize these lazily so that importing the module doesn't throw error when not linked\n// This is necessary coz libraries such as React Navigation import the library where it may not be enabled\nlet NativeScreenValue: React.ComponentType<ScreenProps>;\nlet NativeScreenContainerValue: React.ComponentType<ScreenContainerProps>;\nlet NativeScreenNavigationContainerValue: React.ComponentType<ScreenContainerProps>;\nlet NativeScreenStack: React.ComponentType<ScreenStackProps>;\nlet NativeScreenStackHeaderConfig: React.ComponentType<ScreenStackHeaderConfigProps>;\nlet NativeScreenStackHeaderSubview: React.ComponentType<\n  React.PropsWithChildren<ViewProps & { type?: HeaderSubviewTypes }>\n>;\nlet AnimatedNativeScreen: React.ComponentType<ScreenProps>;\nlet NativeSearchBar: React.ComponentType<SearchBarProps>;\nlet NativeFullWindowOverlay: React.ComponentType<\n  PropsWithChildren<{\n    style: StyleProp<ViewStyle>;\n  }>\n>;\n\nconst ScreensNativeModules = {\n  get NativeScreen() {\n    NativeScreenValue =\n      NativeScreenValue || requireNativeComponent('RNSScreen');\n    return NativeScreenValue;\n  },\n\n  get NativeScreenContainer() {\n    NativeScreenContainerValue =\n      NativeScreenContainerValue ||\n      requireNativeComponent('RNSScreenContainer');\n    return NativeScreenContainerValue;\n  },\n\n  get NativeScreenNavigationContainer() {\n    NativeScreenNavigationContainerValue =\n      NativeScreenNavigationContainerValue ||\n      (Platform.OS === 'ios'\n        ? requireNativeComponent('RNSScreenNavigationContainer')\n        : this.NativeScreenContainer);\n    return NativeScreenNavigationContainerValue;\n  },\n\n  get NativeScreenStack() {\n    NativeScreenStack =\n      NativeScreenStack || requireNativeComponent('RNSScreenStack');\n    return NativeScreenStack;\n  },\n\n  get NativeScreenStackHeaderConfig() {\n    NativeScreenStackHeaderConfig =\n      NativeScreenStackHeaderConfig ||\n      requireNativeComponent('RNSScreenStackHeaderConfig');\n    return NativeScreenStackHeaderConfig;\n  },\n\n  get NativeScreenStackHeaderSubview() {\n    NativeScreenStackHeaderSubview =\n      NativeScreenStackHeaderSubview ||\n      requireNativeComponent('RNSScreenStackHeaderSubview');\n    return NativeScreenStackHeaderSubview;\n  },\n\n  get NativeSearchBar() {\n    NativeSearchBar = NativeSearchBar || requireNativeComponent('RNSSearchBar');\n    return NativeSearchBar;\n  },\n\n  get NativeFullWindowOverlay() {\n    NativeFullWindowOverlay =\n      NativeFullWindowOverlay || requireNativeComponent('RNSFullWindowOverlay');\n    return NativeFullWindowOverlay;\n  },\n};\n\ninterface FreezeWrapperProps {\n  freeze: boolean;\n  children: React.ReactNode;\n}\n\n// This component allows one more render before freezing the screen.\n// Allows activityState to reach the native side and useIsFocused to work correctly.\nfunction DelayedFreeze({ freeze, children }: FreezeWrapperProps) {\n  // flag used for determining whether freeze should be enabled\n  const [freezeState, setFreezeState] = React.useState(false);\n\n  if (freeze !== freezeState) {\n    // setImmediate is executed at the end of the JS execution block.\n    // Used here for changing the state right after the render.\n    setImmediate(() => {\n      setFreezeState(freeze);\n    });\n  }\n\n  return <Freeze freeze={freeze ? freezeState : false}>{children}</Freeze>;\n}\n\nfunction ScreenStack(props: ScreenStackProps) {\n  const { children, ...rest } = props;\n  const size = React.Children.count(children);\n  // freezes all screens except the top one\n  const childrenWithFreeze = React.Children.map(children, (child, index) => {\n    // @ts-expect-error it's either SceneView in v6 or RouteView in v5\n    const { props, key } = child;\n    const descriptor = props?.descriptor ?? props?.descriptors?.[key];\n    const freezeEnabled = descriptor?.options?.freezeOnBlur ?? ENABLE_FREEZE;\n\n    return (\n      <DelayedFreeze freeze={freezeEnabled && size - index > 1}>\n        {child}\n      </DelayedFreeze>\n    );\n  });\n\n  return (\n    <ScreensNativeModules.NativeScreenStack {...rest}>\n      {childrenWithFreeze}\n    </ScreensNativeModules.NativeScreenStack>\n  );\n}\n\n// Incomplete type, all accessible properties available at:\n// react-native/Libraries/Components/View/ReactNativeViewViewConfig.js\ninterface ViewConfig extends View {\n  viewConfig: {\n    validAttributes: {\n      style: {\n        display: boolean;\n      };\n    };\n  };\n}\n\nclass InnerScreen extends React.Component<ScreenProps> {\n  private ref: React.ElementRef<typeof View> | null = null;\n  private closing = new Animated.Value(0);\n  private progress = new Animated.Value(0);\n  private goingForward = new Animated.Value(0);\n\n  setNativeProps(props: ScreenProps): void {\n    this.ref?.setNativeProps(props);\n  }\n\n  setRef = (ref: React.ElementRef<typeof View> | null): void => {\n    this.ref = ref;\n    this.props.onComponentRef?.(ref);\n  };\n\n  render() {\n    const {\n      enabled = ENABLE_SCREENS,\n      freezeOnBlur = ENABLE_FREEZE,\n      ...rest\n    } = this.props;\n\n    if (enabled && isPlatformSupported) {\n      AnimatedNativeScreen =\n        AnimatedNativeScreen ||\n        Animated.createAnimatedComponent(ScreensNativeModules.NativeScreen);\n\n      let {\n        // Filter out active prop in this case because it is unused and\n        // can cause problems depending on react-native version:\n        // https://github.com/react-navigation/react-navigation/issues/4886\n        active,\n        activityState,\n        children,\n        isNativeStack,\n        gestureResponseDistance,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        console.warn(\n          'It appears that you are using old version of react-navigation library. Please update @react-navigation/bottom-tabs, @react-navigation/stack and @react-navigation/drawer to version 5.10.0 or above to take full advantage of new functionality added to react-native-screens'\n        );\n        activityState = active !== 0 ? 2 : 0; // in the new version, we need one of the screens to have value of 2 after the transition\n      }\n\n      const handleRef = (ref: ViewConfig) => {\n        if (ref?.viewConfig?.validAttributes?.style) {\n          ref.viewConfig.validAttributes.style = {\n            ...ref.viewConfig.validAttributes.style,\n            display: false,\n          };\n          this.setRef(ref);\n        }\n      };\n\n      return (\n        <DelayedFreeze freeze={freezeOnBlur && activityState === 0}>\n          <AnimatedNativeScreen\n            {...props}\n            activityState={activityState}\n            gestureResponseDistance={{\n              start: gestureResponseDistance?.start ?? -1,\n              end: gestureResponseDistance?.end ?? -1,\n              top: gestureResponseDistance?.top ?? -1,\n              bottom: gestureResponseDistance?.bottom ?? -1,\n            }}\n            // This prevents showing blank screen when navigating between multiple screens with freezing\n            // https://github.com/software-mansion/react-native-screens/pull/1208\n            ref={handleRef}\n            onTransitionProgress={\n              !isNativeStack\n                ? undefined\n                : Animated.event(\n                    [\n                      {\n                        nativeEvent: {\n                          progress: this.progress,\n                          closing: this.closing,\n                          goingForward: this.goingForward,\n                        },\n                      },\n                    ],\n                    { useNativeDriver: true }\n                  )\n            }\n          >\n            {!isNativeStack ? ( // see comment of this prop in types.tsx for information why it is needed\n              children\n            ) : (\n              <TransitionProgressContext.Provider\n                value={{\n                  progress: this.progress,\n                  closing: this.closing,\n                  goingForward: this.goingForward,\n                }}\n              >\n                {children}\n              </TransitionProgressContext.Provider>\n            )}\n          </AnimatedNativeScreen>\n        </DelayedFreeze>\n      );\n    } else {\n      // same reason as above\n      let {\n        active,\n        activityState,\n        style,\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        onComponentRef,\n        ...props\n      } = rest;\n\n      if (active !== undefined && activityState === undefined) {\n        activityState = active !== 0 ? 2 : 0;\n      }\n      return (\n        <Animated.View\n          style={[style, { display: activityState !== 0 ? 'flex' : 'none' }]}\n          ref={this.setRef}\n          {...props}\n        />\n      );\n    }\n  }\n}\n\nfunction ScreenContainer(props: ScreenContainerProps) {\n  const { enabled = ENABLE_SCREENS, hasTwoStates, ...rest } = props;\n\n  if (enabled && isPlatformSupported) {\n    if (hasTwoStates) {\n      return <ScreensNativeModules.NativeScreenNavigationContainer {...rest} />;\n    }\n    return <ScreensNativeModules.NativeScreenContainer {...rest} />;\n  }\n  return <View {...rest} />;\n}\n\nfunction FullWindowOverlay(props: { children: ReactNode }) {\n  if (Platform.OS !== 'ios') {\n    console.warn('Importing FullWindowOverlay is only valid on iOS devices.');\n    return <View {...props} />;\n  }\n  return (\n    <ScreensNativeModules.NativeFullWindowOverlay\n      style={{ position: 'absolute', width: '100%', height: '100%' }}\n    >\n      {props.children}\n    </ScreensNativeModules.NativeFullWindowOverlay>\n  );\n}\n\nconst styles = StyleSheet.create({\n  headerSubview: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n\nconst ScreenStackHeaderBackButtonImage = (props: ImageProps): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    type=\"back\"\n    style={styles.headerSubview}\n  >\n    <Image resizeMode=\"center\" fadeDuration={0} {...props} />\n  </ScreensNativeModules.NativeScreenStackHeaderSubview>\n);\n\nconst ScreenStackHeaderRightView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"right\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderLeftView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"left\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderCenterView = (\n  props: React.PropsWithChildren<ViewProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"center\"\n    style={styles.headerSubview}\n  />\n);\n\nconst ScreenStackHeaderSearchBarView = (\n  props: React.PropsWithChildren<SearchBarProps>\n): JSX.Element => (\n  <ScreensNativeModules.NativeScreenStackHeaderSubview\n    {...props}\n    type=\"searchBar\"\n    style={styles.headerSubview}\n  />\n);\n\nexport type {\n  StackPresentationTypes,\n  StackAnimationTypes,\n  BlurEffectTypes,\n  ScreenReplaceTypes,\n  ScreenOrientationTypes,\n  HeaderSubviewTypes,\n  ScreenProps,\n  ScreenContainerProps,\n  ScreenStackProps,\n  ScreenStackHeaderConfigProps,\n  SearchBarProps,\n};\n\n// context to be used when the user wants to use enhanced implementation\n// e.g. to use `useReanimatedTransitionProgress` (see `reanimated` folder in repo)\nconst ScreenContext = React.createContext(InnerScreen);\n\nclass Screen extends React.Component<ScreenProps> {\n  static contextType = ScreenContext;\n\n  render() {\n    const ScreenWrapper = this.context || InnerScreen;\n    return <ScreenWrapper {...this.props} />;\n  }\n}\n\nmodule.exports = {\n  // these are classes so they are not evaluated until used\n  // so no need to use getters for them\n  Screen,\n  ScreenContainer,\n  ScreenContext,\n  ScreenStack,\n  InnerScreen,\n  FullWindowOverlay,\n\n  get NativeScreen() {\n    return ScreensNativeModules.NativeScreen;\n  },\n\n  get NativeScreenContainer() {\n    return ScreensNativeModules.NativeScreenContainer;\n  },\n\n  get NativeScreenNavigationContainer() {\n    return ScreensNativeModules.NativeScreenNavigationContainer;\n  },\n\n  get ScreenStackHeaderConfig() {\n    return ScreensNativeModules.NativeScreenStackHeaderConfig;\n  },\n  get ScreenStackHeaderSubview() {\n    return ScreensNativeModules.NativeScreenStackHeaderSubview;\n  },\n  get SearchBar() {\n    if (!isSearchBarAvailableForCurrentPlatform) {\n      console.warn(\n        'Importing SearchBar is only valid on iOS and Android devices.'\n      );\n      return View;\n    }\n\n    return ScreensNativeModules.NativeSearchBar;\n  },\n  // these are functions and will not be evaluated until used\n  // so no need to use getters for them\n  ScreenStackHeaderBackButtonImage,\n  ScreenStackHeaderRightView,\n  ScreenStackHeaderLeftView,\n  ScreenStackHeaderCenterView,\n  ScreenStackHeaderSearchBarView,\n\n  enableScreens,\n  enableFreeze,\n  screensEnabled,\n  shouldUseActivityState,\n  useTransitionProgress,\n\n  isSearchBarAvailableForCurrentPlatform,\n  executeNativeBackPress,\n};\n"],"mappings":"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"}