{"version":3,"names":["_native","require","_nativeStack","_reactNative","Object","keys","forEach","key","prototype","hasOwnProperty","call","_exportNames","exports","defineProperty","enumerable","get","_reactErrorBoundary","_reactTestRenderer","_interopRequireDefault","_recoil","_demo","_RecoilObserver","_jsxRuntime","_excluded","logError","error","info","console","log","Stack","createNativeStackNavigator","toJSON","component","renderer","create","render","App","_ref","_ref$component","DemoScreen","_ref$name","name","jsx","RecoilRoot","children","NavigationContainer","Navigator","detachInactiveScreens","screenOptions","headerShown","unmountOnBlur","Screen","options","renderNavigator","props","ErrorBoundary","FallbackComponent","onError","assign","Recoil","_ref2","rest","_objectWithoutProperties2","default","jsxs","RecoilObserver"],"sources":["customRender.tsx"],"sourcesContent":["import { NavigationContainer } from '@react-navigation/native'\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\nimport { render } from '@testing-library/react-native'\nimport { ErrorBoundary } from 'react-error-boundary'\nimport renderer from 'react-test-renderer'\nimport { RecoilRoot } from 'recoil'\n\nimport DemoScreen from '@screens/demo'\nimport { RecoilObserver } from './RecoilObserver'\n\nimport type { RecoilObserverProps } from './RecoilObserver'\n\ntype Props = {\n  component: JSX.Element\n  name?: string\n}\ntype RecoilRenderProps = RecoilObserverProps & {\n  children: JSX.Element\n}\n\nconst logError = (error: Error, info: { componentStack: string }) => {\n  // Do something with the error, e.g. log to an external API\n  console.log(error, info)\n}\nconst Stack = createNativeStackNavigator()\n\nconst toJSON = (\n  component: Props['component'],\n) => {\n  renderer.create(component).toJSON()\n  return render(component)\n}\nconst App = ({ component = DemoScreen, name = 'Demo' }: Props) => (\n  <RecoilRoot>\n    <NavigationContainer>\n      <Stack.Navigator\n        detachInactiveScreens={true}\n        screenOptions={{\n          headerShown: true,\n          unmountOnBlur: true,\n        }}>\n        <Stack.Screen\n          component={component}\n          name={name}\n          options={{ headerShown: false }}\n        />\n      </Stack.Navigator>\n    </NavigationContainer>\n  </RecoilRoot>\n)\nconst renderNavigator = (props: Props) =>\n  render(\n    // @ts-ignore\n    <ErrorBoundary FallbackComponent=\"Something went wrong\" onError={logError}>\n      <App {...props} />\n    </ErrorBoundary>,\n  )\nconst Recoil = ({ children, ...rest }: RecoilRenderProps) => render(\n  <RecoilRoot>\n    <RecoilObserver {...rest} />\n    {children}\n  </RecoilRoot>,\n)\n\nexport * from '@testing-library/react-native'\nexport { App, toJSON, renderNavigator as render, Recoil }\n\n"],"mappings":"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"}